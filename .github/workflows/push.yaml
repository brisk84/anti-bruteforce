name: golang-pipeline
on: push
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # - name: Extract branch name
      #   run: echo "BRANCH=${GITHUB_REF#refs/heads/}" >> $GITHUB_ENV

      - name: Check out code
        uses: actions/checkout@v2

      - name: Linters
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.41.1
          # working-directory: ${{ env.BRANCH }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Download apps
        uses: actions/download-artifact@v2
        with:
          name: Build apps
      - name: Run Unit Tests
        run: make test
  
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.17'
    - name: Build apps
      run: make build
    - name: Upload server
      uses: actions/upload-artifact@v2
      with:
        name: Build apps
        path: deploy/ab-srv
    - name: Upload client
      uses: actions/upload-artifact@v2
      with:
        name: Build apps
        path: deploy/ab-client

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: lint
  #   steps:
  #     - name: Setup PostgreSQL
  #       uses: Harmon758/postgresql-action@v1.0.0
  #     - name: Extract Version
  #       id: version_step
  #       run: |
  #         echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
  #         echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
  #         echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"
  #     - name: Print Version
  #       run: |
  #         echo ${{steps.version_step.outputs.version_tag}}
  #         echo ${{steps.version_step.outputs.latest_tag}}
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v1

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v1

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v1
  #       with:
  #         username: ${{ secrets.DOCKER_USESRNAME }}
  #         password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

  #     - name: PrepareReg Names
  #       id: read-docker-image-identifiers
  #       run: |
  #         echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
  #         echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
  #     - name: Build and push
  #       id: docker_build
  #       uses: docker/build-push-action@v2
  #       with:
  #         context: ./docker
  #         file: ./docker/Dockerfile
  #         platforms: linux/amd64,linux/arm64,linux/386
  #         push: true
  #         tags: anti-bruteforce
  #         build-args: |
  #             BRANCH=${{ env.BRANCH }}
